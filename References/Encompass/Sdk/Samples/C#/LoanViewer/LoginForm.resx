<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAGABoAwAAJgAAACAgAAABABgAqAwAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAEAD
        AAAAAAAAAAAAAAAAAAAAAAAAIZpCIZpCIJxCHZs+Hpk+H55EKoQ0VTAGjIF4n5+hmZiYmZmZmZmZmZmZ
        mZmZmZmZIZpCIZxCIYs+NYdRL5xRGJs9PFcYWioDgXhug4qMlpqal5aVmJeXmZmZmZmZmZmZIZtCHZM9
        SG5ercrStOPfd7mUUzcMVigAXVZLiKisud/hp7/BnKGilpSUmZiYmZmZIJ1BHoE5fZia2v//2v//3vb4
        scS7Y0IeWEk4n8TI2f//1fz+yuvsscPEmpqamZiYIJ1BH4I7haSk1v//4P//k35kgH1pqsC3eW9fg5yf
        0v7/3ff5rre3wtfYpqeol5eWHqBEGo89dpaT1P//4f//j3thRBMAdm9XqsbIjKOlyPX43v//sLS0lZOT
        mZmZmZmZLIMzOFcYYmxhyfb74f//qKORTSIAUCQAaWNOpMjMz/z+2v//xtLUlZSUmZiYmZmZUjILVScD
        UUMtrtXZ3P//xdLLVy4EUykATyQAc3hswu/z1v//1u3vnJubmJiYmZmZKn2PKH6QKHF/fJ+j1f3+2/r6
        c1UzUSEAVCkAVjcWiaSl0v7/3f3/rLCwlpWVmZmZIY2qIY6rHI2qP4OTttfY4v//nry6Pj8tVikAVCUA
        XFxPvurv3v//wc3NlZOTmZmZIoumIoumIYunHoahZ5ulzO7v1///SaW7LGFjUi8MTS8Pm77B2v//0ufp
        mpmZmJiYIoumIoumIoumIIunIoehea+52Pf3uezzK5m3InF/Qy4PdIJ90v//3Pv9pqmpl5aWIoumIoum
        IoumIoumH4qmIYmkYKu7wezvuenuWKa5PmZofo6J1P//5f//xNDSlpWWIoumIoumIoumIoumIoumIIqm
        GoaiL5OrdL/On9Tdrdfdye3xz+HbvsO3qqSXko+LIoumIoumIoumIoumIoumIoumIoumHomkGIWhI4yn
        L5axMZStUEsyVygAUyoAXDgRIoumIoumIoumIoumIoumIoumIoumIoumIoumIIqlH4mlHI6tM2ZnVSgA
        VCsBVSwBAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//ygAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAAAAAhmkIhmkIhmkIh
        mkIhmkIhmkIlnUctoU83pltDrGdQtHRdvINtyZdysohWMwhRJQCFe2msur6krKygpqadoaGanJ2ZmZmZ
        mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZkhmkIhmkIhmkIhmkIhmkIknEUsoE83pllCrGZOs3Nbu4Fq
        w5B71atthl5SJABRJwCIgG+tvsGlrq+hqKmfo6Scn5+Zm5uZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
        mZkhmkIhmkIhmkIhm0IkoUYpo0wzpVZBrGROs3JauoBowo93zaKDzKddRx5TJwBRJgCPh3W1xsqnsrOk
        q6ygpqaeoaKbnZ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZkhmkIhmkIhm0IjmkQteUZFiGBKqW1I
        sWxXuXxmwY11yZyI3Lh4mHVTJgBVLAFSKgJiX1OQpKentbamrq+iqamfpKSdn5+am5uZmZmZmZmZmZmZ
        mZmZmZmZmZmZmZmZmZkhmkIhmkIin0UsaUFGTVSInqafxcSFw6tswJNvxpaD1K+Mz7BeSCBTJwBWLAFM
        MBE1QUJ4k5amxcilu7yiq6yfpKSeoaKbnp6ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZkhmkIinUQolUg2
        SEOCm5/J8vXL9fnK7fS95uad3MeP3b5ygFxSIwBVLQJWLABLLg5GVFakx8rH8/W95um32tyrvb6eoqKb
        nZ2anJyZmZmZmZmZmZmZmZmZmZmZmZmZmZkhmkMooksuhUpHVFat0dTW///Z///n///k///f//++6+Ri
        SCJOIQBVLQNWLQJQKwRFT02cvsHU///c///h///Z//++3N2hqaqZmZmZmpqZmZmZmZmZmZmZmZmZmZmZ
        mZknnUkwqFM0gU5QXmK23eDV///q/v/U8eeg48m05djO8fLA3NdqUjJOIABVLQJVKwBEPS59m5/O9/rp
        ///O29y/1dbP+frM8fOsuLmZmZmZmZmZmZmZmZmZmZmZmZmZmZkvolE6rF49jFlQYWK02tzY///w//+6
        7dqL07NkXDVnTC+wycTL8fF+cFZOIgBVKgBIMBRedXe/5+rr///R3t+ira2ntrfE5OXk/f6xt7iXlpaZ
        mZmZmZmZmZmZmZmZmZk4pltEsWlJoGlKXVyqztHZ///v//+03MpkXjhRIgBQJABWMAyXpZnO+fyHfmZQ
        IwBOKQRKVVKlyczi///e8vOruLmkra6jq6u+y8yqr7CZmpqZmZmZmZmZmZmZmZmZmZlDrGZQtnVYsnxG
        XFicvMDW///v//+XinJKGwBVLQNVLQNTKABQJgCEhHLN+v2QjXhPIABIQTKEpanX+/3n/v+3x8ims7Sk
        ra6epKSdoaKcn5+ZmpqZmZmZmZmZmZmZmZlNs3Jbu4FpxJFMcGSHoqbR/P7u//+pn4xNIgBVLQNVLQNV
        LQNUKgBQJAB/fmvH9PiGfmdQOBxzjpDG7O/q///J3N2ntLWnsbKjq6ygpqaeoaGbnZyZmZmZmZmZmZmZ
        mZlav4Rqy5d4y51Uc2BtgobG7/Lo///Bw7dTKwJULAFVLQNVLQNVLQNUKwFQJAB7emajycxzc2J9lJO8
        4+bk///a7u+su7yotbakr6+hqamfo6Scnp+ampuZmZmZmZmZmZlipHFlhFdeTSNLMBBWaWqy2Nvg///c
        7ephPRZSKQBVLQNVLQNVLQNVLQNUKwFSJwBqZVOAnaGZuLrC6+7c///l+/y1xsept7insrOkrKyhp6ee
        oaKbnZ2ZmZmZmZmZmZlXMAVUJABUJQBSKABITEORs7fW/f/p//+GclZNIQBVLQNVLQNVLQNVLQNVLQNV
        KwFTKABhXk2MrbG/6ezX/v/n///E19iqubqptbamr7CiqqqfpKSdoKCam5uZmZmZmZlWLgVVLwZWMAdX
        LQJKNh1shYjD7O/r//+ysaNOIwBVKwFVLQNVLQNVLQNVLQNVLQNVKwFULARia2ObvsPO9/rk///V6eut
        vr+rubqos7SjrK2gp6eeoqGcnZ2ZmpmZmZlTkJZZlJtemJ5jmp1ikJFYcXOhw8Te///a7OpkRB5OIABT
        JwBVLAFVLQNVLQNVLQNVLQNVKgBQNBNofX60297e///j+fu2ycqsu72qtremsLGjqaqfpKWdoKCam5uZ
        mZlJqcFQrcRWsshetsxnwNVbkp13jY7H7vHp//+rysloeGxeSitUKwFSJQBUKwBVLQNVLQNVLQJUKQBL
        STyKrLDT+v3o///F2dqsvr+suruotLSlra2hp6ieoqOcnZ6Zmpo+nrREorhKpbxRqb5Yr8Ncr8FdfYKe
        vb7e///Y/f+L1eaEydV9pqRoY01VLQVSJQBVLAJVLQNWKwBKMhVieHy94+bm///U6euvw8Stvr+qt7im
        sbGiq6qgpaadoKGanJ01mLA6m7JAn7ZGo7hMprxSrsNWnKt0jY+/5Obl//+q3+h3xNSH0+KN1OOBrK1k
        WkBTJgBUKABWLQJQKwNKUk2cv8Pe///h+Pq1ysyvwcKsu7yotLWlra6hp6ifo6Ocnp8tkqwxla42mLA8
        nLRCoLZIpLlNqsBakp2NqKnR9vfb/P2Fythyv89/yNeJ1OSN0d54kolaPBlSJQBVKwBFOSd2k5jQ9/no
        ///F29yvw8Suvr+qt7insbKjq6ugpaWdoKAmjqgqkKouk6wzlq44mbE9nbRDobhIpLpjk5yiwcLd/v/B
        7vRsu8xvvc15xNKBy9mM2OiFvMFhUzdTJABKLQ1Xamy64ePn///V6+2yx8mwwsOsu7yptLWlrq+hqaif
        o6Mii6YjjKYnjqkrkaovk600lrA6mrI+n7ZEoLZrnqe01dfg//+u5Oxitcdqust0wNB7xdSF0OCIzNho
        aFNOIQBGSkSavcDe///j+fu50NGxxsevv8CruLmmsrKkrKygpqYii6Yii6Yii6YkjKcoj6kskqsxlK42
        mLA6nLQ/nbRvqbS84OHg//+r4utgtMZjtcdvvc52wdF/y9uEzNtoaVNBMBt2k5fR+Pro///H3+Cyx8mx
        w8StvLyptbalrrCiqKkii6Yii6Yii6Yii6Yji6YljagpkKotkqwylq42mLE5mrNfqbmu2+Df//+16e9w
        u8pdscRmucxwwNJ7zN6By9lTYllleHnG7/Hl///W7vC40dSzx8muv8CrubqmsrOjrKwii6Yii6Yii6Yi
        i6Yii6Yii6YjjKYmjqgqkKovk60zlq8zl7BEnrSExtLL9vjN9PaVx89wqrVinKhdkJlWgIhRbHCKp6nL
        9fjh///h8vGlraS3ztGzyMutvL2otbamr7Aii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6YjjKcnjqkrkasw
        lK0ylq8zlq9NpruHy9i66e6/4uOvzs+jwMCjv8C52tzY+vzk///w///5//+GbE9zYkypuLW0yc2uvsGo
        tLUii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Ykjacoj6kskqwxla4ylq80l7BHo7ltvc2U1uK2
        6vLN+PzR+PzO8/m+29uhl4KReWBoRSFNIQBdOxV/cVuepZ+ptrcii6Yii6Yii6Yii6Yii6Yii6Yii6Yi
        i6Yii6Yii6Yii6Yji6YljagpkKouk6wyla42mLA3mbE7nLNJpLpUq8Bbr8Ngtclhrr1QPRtLHABSKgBV
        LgNTKQBQJQBYMQloTCwii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yji6Ymjqgr
        kaovk60zl685mrI9nbRCoLdJpLpPqL1XtcxahoVVKABVLQJVLQNVLQNVLQNUKwBTKQAii6Yii6Yii6Yi
        i6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6YkjKcnjqkrkaswla00l686mrJAn7VForhM
        p75TqLtVRSZVKABVLQNVLQNVLQNVLQNWLwUii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yii6Yi
        i6Yii6Yii6Yii6Yii6Yii6Yljacoj6ktkqsxla42mLA7m7NBn7ZHq8VRb2dWJwBVLQNVLQRVLQRVLQRW
        LwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>